import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.util.ArrayList;

import proyecto.Paciente;
import proyecto.Genero;

public class HospitalLoginUi {
	static java.util.List<Paciente> listaPacientes = new ArrayList<>();
	static java.util.List<String> listaEmpleados = new ArrayList<>(); // Simulación
	static java.util.List<String> listaSalas = new ArrayList<>(); // Simulación

	public static void main(String[] args) {
		mostrarLogin();
	}

	public static void mostrarLogin() {
		JFrame frame = new JFrame("Login Hospital");
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.setSize(400, 300);
		frame.setLocationRelativeTo(null);
		frame.setLayout(new BorderLayout());

		Color fondo = new Color(245, 245, 245);
		Color btnColor = new Color(33, 150, 243);
		Color txtBtn = Color.WHITE;
		Font fuente = new Font("Arial", Font.PLAIN, 14);

		JPanel panel = new JPanel(new GridLayout(4, 2, 10, 10));
		panel.setBorder(BorderFactory.createEmptyBorder(40, 40, 10, 40));
		panel.setBackground(fondo);

		JLabel usuarioLabel = new JLabel("Usuario:");
		JTextField usuarioField = new JTextField();
		JLabel passwordLabel = new JLabel("Contraseña:");
		JPasswordField passwordField = new JPasswordField();
		JLabel rolLabel = new JLabel("Rol:");
		String[] roles = {"Administrador", "Doctor", "Recepcionista"};
		JComboBox<String> rolBox = new JComboBox<>(roles);

		panel.add(usuarioLabel);
		panel.add(usuarioField);
		panel.add(passwordLabel);
		panel.add(passwordField);
		panel.add(rolLabel);
		panel.add(rolBox);
		panel.add(new JLabel());
		panel.add(new JLabel());

		frame.add(panel, BorderLayout.CENTER);

		JButton loginBtn = new JButton("Entrar");
		loginBtn.setFont(fuente);
		loginBtn.setBackground(btnColor);
		loginBtn.setForeground(txtBtn);

		JPanel botonPanel = new JPanel(new FlowLayout(FlowLayout.RIGHT));
		botonPanel.setBorder(BorderFactory.createEmptyBorder(0, 40, 40, 40));
		botonPanel.setBackground(fondo);
		botonPanel.add(loginBtn);
		frame.add(botonPanel, BorderLayout.SOUTH);

		loginBtn.addActionListener(e -> {
			String usuario = usuarioField.getText();
			String password = new String(passwordField.getPassword());
			String rolSeleccionado = (String) rolBox.getSelectedItem();

			if (usuario.isEmpty() || password.isEmpty()) {
				JOptionPane.showMessageDialog(frame, "Debe ingresar usuario y contraseña.", "Error",
						JOptionPane.ERROR_MESSAGE);
				return;
			}

			frame.dispose();
			menuPrincipal(rolSeleccionado);
			JOptionPane.showMessageDialog(null, "Acceso realizado con éxito.\nUsuario: " + usuario);
		});

		frame.getContentPane().setBackground(fondo);
		frame.setVisible(true);
	}

	public static void menuPrincipal(String rol) {
		JFrame frame = new JFrame("Menú Principal - Rol: " + rol);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.setSize(500, 400);
		frame.setLocationRelativeTo(null);

		JPanel panel = new JPanel(new GridLayout(0, 1, 10, 10));
		panel.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));

		if (rol.equals("Administrador") || rol.equals("Doctor")) {
			JButton btnPacientes = new JButton("Gestión de Pacientes");
			btnPacientes.addActionListener(e -> gestionPacientes(rol));
			panel.add(btnPacientes);
		}

		if (rol.equals("Administrador") || rol.equals("Recepcionista")) {
			JButton btnEmpleados = new JButton("Gestión de Empleados");
			btnEmpleados.addActionListener(e -> gestionEmpleados(rol));
			panel.add(btnEmpleados);
		}

		if (rol.equals("Administrador")) {
			JButton btnSalas = new JButton("Gestión de Salas");
			btnSalas.addActionListener(e -> gestionSalas(rol));
			panel.add(btnSalas);
		}

		JButton btnCerrarSesion = new JButton("Cerrar Sesión");
		btnCerrarSesion.addActionListener(e -> {
			frame.dispose();
			mostrarLogin();
		});
		panel.add(btnCerrarSesion);

		frame.add(panel);
		frame.setVisible(true);
	}

	public static void gestionPacientes(String rol) {
		JFrame frame = new JFrame("Gestión de Pacientes - " + rol);
		frame.setSize(600, 400);
		frame.setLocationRelativeTo(null);
		frame.setLayout(new BorderLayout());

		String[] labels = {"DNI", "Nombre", "Apellidos", "Género (M/F)", "Teléfono", "Email", "Obra Social"};
		JTextField[] fields = new JTextField[labels.length];

		JPanel form = new JPanel(new GridLayout(labels.length, 2, 5, 5));
		for (int i = 0; i < labels.length; i++) {
			form.add(new JLabel(labels[i] + ":"));
			fields[i] = new JTextField();
			form.add(fields[i]);
		}

		JButton btnGuardar = new JButton("Registrar Paciente");
		btnGuardar.addActionListener(e -> {
			try {
				String dni = fields[0].getText();
				String nombre = fields[1].getText();
				String apellidos = fields[2].getText();
				char generoChar = fields[3].getText().toUpperCase().charAt(0);
				Genero genero = (generoChar == 'M') ? Genero.MASCULINO : Genero.FEMENINO;
				int telefono = Integer.parseInt(fields[4].getText());
				String email = fields[5].getText();
				String obraSocial = fields[6].getText();

				Paciente nuevo = new Paciente(dni, nombre, apellidos, genero, telefono, email, obraSocial, null, false);
				listaPacientes.add(nuevo);

				JOptionPane.showMessageDialog(frame, "Paciente registrado correctamente.");
				for (JTextField field : fields) field.setText("");
			} catch (Exception ex) {
				JOptionPane.showMessageDialog(frame, "Error al registrar paciente: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
			}
		});

		frame.add(form, BorderLayout.CENTER);
		frame.add(btnGuardar, BorderLayout.SOUTH);
		frame.setVisible(true);
	}

	public static void gestionEmpleados(String rol) {
		JFrame frame = new JFrame("Gestión de Empleados - " + rol);
		frame.setSize(500, 300);
		frame.setLocationRelativeTo(null);
		frame.setLayout(new BorderLayout());

		String[] labels = {"ID Empleado", "Nombre", "Cargo"};
		JTextField[] fields = new JTextField[labels.length];
		JPanel form = new JPanel(new GridLayout(labels.length, 2, 5, 5));

		for (int i = 0; i < labels.length; i++) {
			form.add(new JLabel(labels[i] + ":"));
			fields[i] = new JTextField();
			form.add(fields[i]);
		}

		JButton btnGuardar = new JButton("Registrar Empleado");
		btnGuardar.addActionListener(e -> {
			String id = fields[0].getText();
			String nombre = fields[1].getText();
			String cargo = fields[2].getText();
			if (id.isEmpty() || nombre.isEmpty() || cargo.isEmpty()) {
				JOptionPane.showMessageDialog(frame, "Todos los campos son obligatorios.", "Error", JOptionPane.ERROR_MESSAGE);
				return;
			}
			listaEmpleados.add(id + " - " + nombre + " - " + cargo);
			JOptionPane.showMessageDialog(frame, "Empleado registrado correctamente.");
			for (JTextField field : fields) field.setText("");
		});

		frame.add(form, BorderLayout.CENTER);
		frame.add(btnGuardar, BorderLayout.SOUTH);
		frame.setVisible(true);
	}

	public static void gestionSalas(String rol) {
		JFrame frame = new JFrame("Gestión de Salas - " + rol);
		frame.setSize(500, 300);
		frame.setLocationRelativeTo(null);
		frame.setLayout(new BorderLayout());

		String[] labels = {"ID Sala", "Tipo", "Capacidad"};
		JTextField[] fields = new JTextField[labels.length];
		JPanel form = new JPanel(new GridLayout(labels.length, 2, 5, 5));

		for (int i = 0; i < labels.length; i++) {
			form.add(new JLabel(labels[i] + ":"));
			fields[i] = new JTextField();
			form.add(fields[i]);
		}

		JButton btnGuardar = new JButton("Registrar Sala");
		btnGuardar.addActionListener(e -> {
			String id = fields[0].getText();
			String tipo = fields[1].getText();
			String capacidad = fields[2].getText();
			if (id.isEmpty() || tipo.isEmpty() || capacidad.isEmpty()) {
				JOptionPane.showMessageDialog(frame, "Todos los campos son obligatorios.", "Error", JOptionPane.ERROR_MESSAGE);
				return;
			}
			listaSalas.add(id + " - " + tipo + " - Capacidad: " + capacidad);
			JOptionPane.showMessageDialog(frame, "Sala registrada correctamente.");
			for (JTextField field : fields) field.setText("");
		});

		frame.add(form, BorderLayout.CENTER);
		frame.add(btnGuardar, BorderLayout.SOUTH);
		frame.setVisible(true);
	}
}